name: VibeTrack CI Analysis

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  vibetrack-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch full history for better analysis
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install VibeTrack
      run: |
        pip install -r requirements.txt
        pip install -e .
    
    - name: Analyze Changes (Silent Mode)
      id: analyze
      run: |
        # Run VibeTrack in silent mode
        echo "ANALYSIS_RESULT<<EOF" >> $GITHUB_OUTPUT
        vt silent analyze --output-format json >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      continue-on-error: true
    
    - name: Check Commit Quality
      id: commit-check
      if: github.event_name == 'push'
      run: |
        echo "COMMIT_QUALITY<<EOF" >> $GITHUB_OUTPUT
        vt silent check-commit --output-format json >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      continue-on-error: true
    
    - name: Comment PR with Analysis
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const analysis = `${{ steps.analyze.outputs.ANALYSIS_RESULT }}`;
          
          try {
            const result = JSON.parse(analysis);
            
            let comment = `## 🎯 VibeTrack Analysis\n\n`;
            
            if (result.success) {
              comment += `✅ **Analysis completed successfully**\n\n`;
              comment += `### 🧠 AI Analysis:\n`;
              comment += result.analysis;
            } else {
              comment += `❌ **Analysis failed**\n\n`;
              comment += `Error: ${result.error}`;
            }
            
            comment += `\n\n---\n*Generated by VibeTrack - دستیار شخصی برای Vibe Coders*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Failed to parse analysis result:', error);
          }
    
    - name: Create Analysis Artifact
      if: always()
      run: |
        mkdir -p analysis-reports
        echo '${{ steps.analyze.outputs.ANALYSIS_RESULT }}' > analysis-reports/vibetrack-analysis.json
        if [ -n "${{ steps.commit-check.outputs.COMMIT_QUALITY }}" ]; then
          echo '${{ steps.commit-check.outputs.COMMIT_QUALITY }}' > analysis-reports/commit-quality.json
        fi
    
    - name: Upload Analysis Reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: vibetrack-analysis-reports
        path: analysis-reports/
        retention-days: 30